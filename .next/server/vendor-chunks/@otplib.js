"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@otplib";
exports.ids = ["vendor-chunks/@otplib"];
exports.modules = {

/***/ "(rsc)/./node_modules/@otplib/core/index.js":
/*!********************************************!*\
  !*** ./node_modules/@otplib/core/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * @otplib/core\n *\n * @author Gerald Yeo <contact@fusedthought.com>\n * @version: 12.0.1\n * @license: MIT\n **/\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nfunction objectValues(value) {\n  return Object.keys(value).map(key => value[key]);\n}\n(function (HashAlgorithms) {\n  HashAlgorithms[\"SHA1\"] = \"sha1\";\n  HashAlgorithms[\"SHA256\"] = \"sha256\";\n  HashAlgorithms[\"SHA512\"] = \"sha512\";\n})(exports.HashAlgorithms || (exports.HashAlgorithms = {}));\nconst HASH_ALGORITHMS = objectValues(exports.HashAlgorithms);\n(function (KeyEncodings) {\n  KeyEncodings[\"ASCII\"] = \"ascii\";\n  KeyEncodings[\"BASE64\"] = \"base64\";\n  KeyEncodings[\"HEX\"] = \"hex\";\n  KeyEncodings[\"LATIN1\"] = \"latin1\";\n  KeyEncodings[\"UTF8\"] = \"utf8\";\n})(exports.KeyEncodings || (exports.KeyEncodings = {}));\nconst KEY_ENCODINGS = objectValues(exports.KeyEncodings);\n(function (Strategy) {\n  Strategy[\"HOTP\"] = \"hotp\";\n  Strategy[\"TOTP\"] = \"totp\";\n})(exports.Strategy || (exports.Strategy = {}));\nconst STRATEGY = objectValues(exports.Strategy);\nconst createDigestPlaceholder = () => {\n  throw new Error('Please provide an options.createDigest implementation.');\n};\nfunction isTokenValid(value) {\n  return /^(\\d+)$/.test(value);\n}\nfunction padStart(value, maxLength, fillString) {\n  if (value.length >= maxLength) {\n    return value;\n  }\n  const padding = Array(maxLength + 1).join(fillString);\n  return `${padding}${value}`.slice(-1 * maxLength);\n}\nfunction keyuri(options) {\n  const tmpl = `otpauth://${options.type}/{labelPrefix}:{accountName}?secret={secret}{query}`;\n  const params = [];\n  if (STRATEGY.indexOf(options.type) < 0) {\n    throw new Error(`Expecting options.type to be one of ${STRATEGY.join(', ')}. Received ${options.type}.`);\n  }\n  if (options.type === 'hotp') {\n    if (options.counter == null || typeof options.counter !== 'number') {\n      throw new Error('Expecting options.counter to be a number when options.type is \"hotp\".');\n    }\n    params.push(`&counter=${options.counter}`);\n  }\n  if (options.type === 'totp' && options.step) {\n    params.push(`&period=${options.step}`);\n  }\n  if (options.digits) {\n    params.push(`&digits=${options.digits}`);\n  }\n  if (options.algorithm) {\n    params.push(`&algorithm=${options.algorithm.toUpperCase()}`);\n  }\n  if (options.issuer) {\n    params.push(`&issuer=${encodeURIComponent(options.issuer)}`);\n  }\n  return tmpl.replace('{labelPrefix}', encodeURIComponent(options.issuer || options.accountName)).replace('{accountName}', encodeURIComponent(options.accountName)).replace('{secret}', options.secret).replace('{query}', params.join(''));\n}\nclass OTP {\n  constructor(defaultOptions = {}) {\n    this._defaultOptions = Object.freeze({ ...defaultOptions\n    });\n    this._options = Object.freeze({});\n  }\n  create(defaultOptions = {}) {\n    return new OTP(defaultOptions);\n  }\n  clone(defaultOptions = {}) {\n    const instance = this.create({ ...this._defaultOptions,\n      ...defaultOptions\n    });\n    instance.options = this._options;\n    return instance;\n  }\n  get options() {\n    return Object.freeze({ ...this._defaultOptions,\n      ...this._options\n    });\n  }\n  set options(options) {\n    this._options = Object.freeze({ ...this._options,\n      ...options\n    });\n  }\n  allOptions() {\n    return this.options;\n  }\n  resetOptions() {\n    this._options = Object.freeze({});\n  }\n}\n\nfunction hotpOptionsValidator(options) {\n  if (typeof options.createDigest !== 'function') {\n    throw new Error('Expecting options.createDigest to be a function.');\n  }\n  if (typeof options.createHmacKey !== 'function') {\n    throw new Error('Expecting options.createHmacKey to be a function.');\n  }\n  if (typeof options.digits !== 'number') {\n    throw new Error('Expecting options.digits to be a number.');\n  }\n  if (!options.algorithm || HASH_ALGORITHMS.indexOf(options.algorithm) < 0) {\n    throw new Error(`Expecting options.algorithm to be one of ${HASH_ALGORITHMS.join(', ')}. Received ${options.algorithm}.`);\n  }\n  if (!options.encoding || KEY_ENCODINGS.indexOf(options.encoding) < 0) {\n    throw new Error(`Expecting options.encoding to be one of ${KEY_ENCODINGS.join(', ')}. Received ${options.encoding}.`);\n  }\n}\nconst hotpCreateHmacKey = (algorithm, secret, encoding) => {\n  return Buffer.from(secret, encoding).toString('hex');\n};\nfunction hotpDefaultOptions() {\n  const options = {\n    algorithm: exports.HashAlgorithms.SHA1,\n    createHmacKey: hotpCreateHmacKey,\n    createDigest: createDigestPlaceholder,\n    digits: 6,\n    encoding: exports.KeyEncodings.ASCII\n  };\n  return options;\n}\nfunction hotpOptions(opt) {\n  const options = { ...hotpDefaultOptions(),\n    ...opt\n  };\n  hotpOptionsValidator(options);\n  return Object.freeze(options);\n}\nfunction hotpCounter(counter) {\n  const hexCounter = counter.toString(16);\n  return padStart(hexCounter, 16, '0');\n}\nfunction hotpDigestToToken(hexDigest, digits) {\n  const digest = Buffer.from(hexDigest, 'hex');\n  const offset = digest[digest.length - 1] & 0xf;\n  const binary = (digest[offset] & 0x7f) << 24 | (digest[offset + 1] & 0xff) << 16 | (digest[offset + 2] & 0xff) << 8 | digest[offset + 3] & 0xff;\n  const token = binary % Math.pow(10, digits);\n  return padStart(String(token), digits, '0');\n}\nfunction hotpDigest(secret, counter, options) {\n  const hexCounter = hotpCounter(counter);\n  const hmacKey = options.createHmacKey(options.algorithm, secret, options.encoding);\n  return options.createDigest(options.algorithm, hmacKey, hexCounter);\n}\nfunction hotpToken(secret, counter, options) {\n  const hexDigest = options.digest || hotpDigest(secret, counter, options);\n  return hotpDigestToToken(hexDigest, options.digits);\n}\nfunction hotpCheck(token, secret, counter, options) {\n  if (!isTokenValid(token)) {\n    return false;\n  }\n  const systemToken = hotpToken(secret, counter, options);\n  return token === systemToken;\n}\nfunction hotpKeyuri(accountName, issuer, secret, counter, options) {\n  return keyuri({\n    algorithm: options.algorithm,\n    digits: options.digits,\n    type: exports.Strategy.HOTP,\n    accountName,\n    counter,\n    issuer,\n    secret\n  });\n}\nclass HOTP extends OTP {\n  create(defaultOptions = {}) {\n    return new HOTP(defaultOptions);\n  }\n  allOptions() {\n    return hotpOptions(this.options);\n  }\n  generate(secret, counter) {\n    return hotpToken(secret, counter, this.allOptions());\n  }\n  check(token, secret, counter) {\n    return hotpCheck(token, secret, counter, this.allOptions());\n  }\n  verify(opts) {\n    if (typeof opts !== 'object') {\n      throw new Error('Expecting argument 0 of verify to be an object');\n    }\n    return this.check(opts.token, opts.secret, opts.counter);\n  }\n  keyuri(accountName, issuer, secret, counter) {\n    return hotpKeyuri(accountName, issuer, secret, counter, this.allOptions());\n  }\n}\n\nfunction parseWindowBounds(win) {\n  if (typeof win === 'number') {\n    return [Math.abs(win), Math.abs(win)];\n  }\n  if (Array.isArray(win)) {\n    const [past, future] = win;\n    if (typeof past === 'number' && typeof future === 'number') {\n      return [Math.abs(past), Math.abs(future)];\n    }\n  }\n  throw new Error('Expecting options.window to be an number or [number, number].');\n}\nfunction totpOptionsValidator(options) {\n  hotpOptionsValidator(options);\n  parseWindowBounds(options.window);\n  if (typeof options.epoch !== 'number') {\n    throw new Error('Expecting options.epoch to be a number.');\n  }\n  if (typeof options.step !== 'number') {\n    throw new Error('Expecting options.step to be a number.');\n  }\n}\nconst totpPadSecret = (secret, encoding, minLength) => {\n  const currentLength = secret.length;\n  const hexSecret = Buffer.from(secret, encoding).toString('hex');\n  if (currentLength < minLength) {\n    const newSecret = new Array(minLength - currentLength + 1).join(hexSecret);\n    return Buffer.from(newSecret, 'hex').slice(0, minLength).toString('hex');\n  }\n  return hexSecret;\n};\nconst totpCreateHmacKey = (algorithm, secret, encoding) => {\n  switch (algorithm) {\n    case exports.HashAlgorithms.SHA1:\n      return totpPadSecret(secret, encoding, 20);\n    case exports.HashAlgorithms.SHA256:\n      return totpPadSecret(secret, encoding, 32);\n    case exports.HashAlgorithms.SHA512:\n      return totpPadSecret(secret, encoding, 64);\n    default:\n      throw new Error(`Expecting algorithm to be one of ${HASH_ALGORITHMS.join(', ')}. Received ${algorithm}.`);\n  }\n};\nfunction totpDefaultOptions() {\n  const options = {\n    algorithm: exports.HashAlgorithms.SHA1,\n    createDigest: createDigestPlaceholder,\n    createHmacKey: totpCreateHmacKey,\n    digits: 6,\n    encoding: exports.KeyEncodings.ASCII,\n    epoch: Date.now(),\n    step: 30,\n    window: 0\n  };\n  return options;\n}\nfunction totpOptions(opt) {\n  const options = { ...totpDefaultOptions(),\n    ...opt\n  };\n  totpOptionsValidator(options);\n  return Object.freeze(options);\n}\nfunction totpCounter(epoch, step) {\n  return Math.floor(epoch / step / 1000);\n}\nfunction totpToken(secret, options) {\n  const counter = totpCounter(options.epoch, options.step);\n  return hotpToken(secret, counter, options);\n}\nfunction totpEpochsInWindow(epoch, direction, deltaPerEpoch, numOfEpoches) {\n  const result = [];\n  if (numOfEpoches === 0) {\n    return result;\n  }\n  for (let i = 1; i <= numOfEpoches; i++) {\n    const delta = direction * i * deltaPerEpoch;\n    result.push(epoch + delta);\n  }\n  return result;\n}\nfunction totpEpochAvailable(epoch, step, win) {\n  const bounds = parseWindowBounds(win);\n  const delta = step * 1000;\n  return {\n    current: epoch,\n    past: totpEpochsInWindow(epoch, -1, delta, bounds[0]),\n    future: totpEpochsInWindow(epoch, 1, delta, bounds[1])\n  };\n}\nfunction totpCheck(token, secret, options) {\n  if (!isTokenValid(token)) {\n    return false;\n  }\n  const systemToken = totpToken(secret, options);\n  return token === systemToken;\n}\nfunction totpCheckByEpoch(epochs, token, secret, options) {\n  let position = null;\n  epochs.some((epoch, idx) => {\n    if (totpCheck(token, secret, { ...options,\n      epoch\n    })) {\n      position = idx + 1;\n      return true;\n    }\n    return false;\n  });\n  return position;\n}\nfunction totpCheckWithWindow(token, secret, options) {\n  if (totpCheck(token, secret, options)) {\n    return 0;\n  }\n  const epochs = totpEpochAvailable(options.epoch, options.step, options.window);\n  const backward = totpCheckByEpoch(epochs.past, token, secret, options);\n  if (backward !== null) {\n    return backward * -1;\n  }\n  return totpCheckByEpoch(epochs.future, token, secret, options);\n}\nfunction totpTimeUsed(epoch, step) {\n  return Math.floor(epoch / 1000) % step;\n}\nfunction totpTimeRemaining(epoch, step) {\n  return step - totpTimeUsed(epoch, step);\n}\nfunction totpKeyuri(accountName, issuer, secret, options) {\n  return keyuri({\n    algorithm: options.algorithm,\n    digits: options.digits,\n    step: options.step,\n    type: exports.Strategy.TOTP,\n    accountName,\n    issuer,\n    secret\n  });\n}\nclass TOTP extends HOTP {\n  create(defaultOptions = {}) {\n    return new TOTP(defaultOptions);\n  }\n  allOptions() {\n    return totpOptions(this.options);\n  }\n  generate(secret) {\n    return totpToken(secret, this.allOptions());\n  }\n  checkDelta(token, secret) {\n    return totpCheckWithWindow(token, secret, this.allOptions());\n  }\n  check(token, secret) {\n    const delta = this.checkDelta(token, secret);\n    return typeof delta === 'number';\n  }\n  verify(opts) {\n    if (typeof opts !== 'object') {\n      throw new Error('Expecting argument 0 of verify to be an object');\n    }\n    return this.check(opts.token, opts.secret);\n  }\n  timeRemaining() {\n    const options = this.allOptions();\n    return totpTimeRemaining(options.epoch, options.step);\n  }\n  timeUsed() {\n    const options = this.allOptions();\n    return totpTimeUsed(options.epoch, options.step);\n  }\n  keyuri(accountName, issuer, secret) {\n    return totpKeyuri(accountName, issuer, secret, this.allOptions());\n  }\n}\n\nfunction authenticatorOptionValidator(options) {\n  totpOptionsValidator(options);\n  if (typeof options.keyDecoder !== 'function') {\n    throw new Error('Expecting options.keyDecoder to be a function.');\n  }\n  if (options.keyEncoder && typeof options.keyEncoder !== 'function') {\n    throw new Error('Expecting options.keyEncoder to be a function.');\n  }\n}\nfunction authenticatorDefaultOptions() {\n  const options = {\n    algorithm: exports.HashAlgorithms.SHA1,\n    createDigest: createDigestPlaceholder,\n    createHmacKey: totpCreateHmacKey,\n    digits: 6,\n    encoding: exports.KeyEncodings.HEX,\n    epoch: Date.now(),\n    step: 30,\n    window: 0\n  };\n  return options;\n}\nfunction authenticatorOptions(opt) {\n  const options = { ...authenticatorDefaultOptions(),\n    ...opt\n  };\n  authenticatorOptionValidator(options);\n  return Object.freeze(options);\n}\nfunction authenticatorEncoder(secret, options) {\n  return options.keyEncoder(secret, options.encoding);\n}\nfunction authenticatorDecoder(secret, options) {\n  return options.keyDecoder(secret, options.encoding);\n}\nfunction authenticatorGenerateSecret(numberOfBytes, options) {\n  const key = options.createRandomBytes(numberOfBytes, options.encoding);\n  return authenticatorEncoder(key, options);\n}\nfunction authenticatorToken(secret, options) {\n  return totpToken(authenticatorDecoder(secret, options), options);\n}\nfunction authenticatorCheckWithWindow(token, secret, options) {\n  return totpCheckWithWindow(token, authenticatorDecoder(secret, options), options);\n}\nclass Authenticator extends TOTP {\n  create(defaultOptions = {}) {\n    return new Authenticator(defaultOptions);\n  }\n  allOptions() {\n    return authenticatorOptions(this.options);\n  }\n  generate(secret) {\n    return authenticatorToken(secret, this.allOptions());\n  }\n  checkDelta(token, secret) {\n    return authenticatorCheckWithWindow(token, secret, this.allOptions());\n  }\n  encode(secret) {\n    return authenticatorEncoder(secret, this.allOptions());\n  }\n  decode(secret) {\n    return authenticatorDecoder(secret, this.allOptions());\n  }\n  generateSecret(numberOfBytes = 10) {\n    return authenticatorGenerateSecret(numberOfBytes, this.allOptions());\n  }\n}\n\nexports.Authenticator = Authenticator;\nexports.HASH_ALGORITHMS = HASH_ALGORITHMS;\nexports.HOTP = HOTP;\nexports.KEY_ENCODINGS = KEY_ENCODINGS;\nexports.OTP = OTP;\nexports.STRATEGY = STRATEGY;\nexports.TOTP = TOTP;\nexports.authenticatorCheckWithWindow = authenticatorCheckWithWindow;\nexports.authenticatorDecoder = authenticatorDecoder;\nexports.authenticatorDefaultOptions = authenticatorDefaultOptions;\nexports.authenticatorEncoder = authenticatorEncoder;\nexports.authenticatorGenerateSecret = authenticatorGenerateSecret;\nexports.authenticatorOptionValidator = authenticatorOptionValidator;\nexports.authenticatorOptions = authenticatorOptions;\nexports.authenticatorToken = authenticatorToken;\nexports.createDigestPlaceholder = createDigestPlaceholder;\nexports.hotpCheck = hotpCheck;\nexports.hotpCounter = hotpCounter;\nexports.hotpCreateHmacKey = hotpCreateHmacKey;\nexports.hotpDefaultOptions = hotpDefaultOptions;\nexports.hotpDigestToToken = hotpDigestToToken;\nexports.hotpKeyuri = hotpKeyuri;\nexports.hotpOptions = hotpOptions;\nexports.hotpOptionsValidator = hotpOptionsValidator;\nexports.hotpToken = hotpToken;\nexports.isTokenValid = isTokenValid;\nexports.keyuri = keyuri;\nexports.objectValues = objectValues;\nexports.padStart = padStart;\nexports.totpCheck = totpCheck;\nexports.totpCheckByEpoch = totpCheckByEpoch;\nexports.totpCheckWithWindow = totpCheckWithWindow;\nexports.totpCounter = totpCounter;\nexports.totpCreateHmacKey = totpCreateHmacKey;\nexports.totpDefaultOptions = totpDefaultOptions;\nexports.totpEpochAvailable = totpEpochAvailable;\nexports.totpKeyuri = totpKeyuri;\nexports.totpOptions = totpOptions;\nexports.totpOptionsValidator = totpOptionsValidator;\nexports.totpPadSecret = totpPadSecret;\nexports.totpTimeRemaining = totpTimeRemaining;\nexports.totpTimeUsed = totpTimeUsed;\nexports.totpToken = totpToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@otplib/core/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@otplib/plugin-crypto/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@otplib/plugin-crypto/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * @otplib/plugin-crypto\n *\n * @author Gerald Yeo <contact@fusedthought.com>\n * @version: 12.0.1\n * @license: MIT\n **/\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar crypto = _interopDefault(__webpack_require__(/*! crypto */ \"crypto\"));\n\nconst createDigest = (algorithm, hmacKey, counter) => {\n  const hmac = crypto.createHmac(algorithm, Buffer.from(hmacKey, 'hex'));\n  const digest = hmac.update(Buffer.from(counter, 'hex')).digest();\n  return digest.toString('hex');\n};\nconst createRandomBytes = (size, encoding) => {\n  return crypto.randomBytes(size).toString(encoding);\n};\n\nexports.createDigest = createDigest;\nexports.createRandomBytes = createRandomBytes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG90cGxpYi9wbHVnaW4tY3J5cHRvL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7O0FBRWIsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxnQ0FBZ0M7O0FBRWhDLDZCQUE2QixtQkFBTyxDQUFDLHNCQUFROztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQjtBQUNwQix5QkFBeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmdlbGJyb2tpbmctbGl2ZS1kYXRhLXZlcmNlbC8uL25vZGVfbW9kdWxlcy9Ab3RwbGliL3BsdWdpbi1jcnlwdG8vaW5kZXguanM/YmE2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBvdHBsaWIvcGx1Z2luLWNyeXB0b1xuICpcbiAqIEBhdXRob3IgR2VyYWxkIFllbyA8Y29udGFjdEBmdXNlZHRob3VnaHQuY29tPlxuICogQHZlcnNpb246IDEyLjAuMVxuICogQGxpY2Vuc2U6IE1JVFxuICoqL1xuJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5mdW5jdGlvbiBfaW50ZXJvcERlZmF1bHQgKGV4KSB7IHJldHVybiAoZXggJiYgKHR5cGVvZiBleCA9PT0gJ29iamVjdCcpICYmICdkZWZhdWx0JyBpbiBleCkgPyBleFsnZGVmYXVsdCddIDogZXg7IH1cblxudmFyIGNyeXB0byA9IF9pbnRlcm9wRGVmYXVsdChyZXF1aXJlKCdjcnlwdG8nKSk7XG5cbmNvbnN0IGNyZWF0ZURpZ2VzdCA9IChhbGdvcml0aG0sIGhtYWNLZXksIGNvdW50ZXIpID0+IHtcbiAgY29uc3QgaG1hYyA9IGNyeXB0by5jcmVhdGVIbWFjKGFsZ29yaXRobSwgQnVmZmVyLmZyb20oaG1hY0tleSwgJ2hleCcpKTtcbiAgY29uc3QgZGlnZXN0ID0gaG1hYy51cGRhdGUoQnVmZmVyLmZyb20oY291bnRlciwgJ2hleCcpKS5kaWdlc3QoKTtcbiAgcmV0dXJuIGRpZ2VzdC50b1N0cmluZygnaGV4Jyk7XG59O1xuY29uc3QgY3JlYXRlUmFuZG9tQnl0ZXMgPSAoc2l6ZSwgZW5jb2RpbmcpID0+IHtcbiAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcyhzaXplKS50b1N0cmluZyhlbmNvZGluZyk7XG59O1xuXG5leHBvcnRzLmNyZWF0ZURpZ2VzdCA9IGNyZWF0ZURpZ2VzdDtcbmV4cG9ydHMuY3JlYXRlUmFuZG9tQnl0ZXMgPSBjcmVhdGVSYW5kb21CeXRlcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@otplib/plugin-crypto/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@otplib/plugin-thirty-two/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@otplib/plugin-thirty-two/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * @otplib/plugin-thirty-two\n *\n * @author Gerald Yeo <contact@fusedthought.com>\n * @version: 12.0.1\n * @license: MIT\n **/\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar thirtyTwo = _interopDefault(__webpack_require__(/*! thirty-two */ \"(rsc)/./node_modules/thirty-two/lib/thirty-two/index.js\"));\n\nconst keyDecoder = (encodedSecret, encoding) => {\n  return thirtyTwo.decode(encodedSecret).toString(encoding);\n};\nconst keyEncoder = (secret, encoding) => {\n  return thirtyTwo.encode(Buffer.from(secret, encoding).toString('ascii')).toString().replace(/=/g, '');\n};\n\nexports.keyDecoder = keyDecoder;\nexports.keyEncoder = keyEncoder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG90cGxpYi9wbHVnaW4tdGhpcnR5LXR3by9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhOztBQUViLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsZ0NBQWdDOztBQUVoQyxnQ0FBZ0MsbUJBQU8sQ0FBQywyRUFBWTs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQjtBQUNsQixrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmdlbGJyb2tpbmctbGl2ZS1kYXRhLXZlcmNlbC8uL25vZGVfbW9kdWxlcy9Ab3RwbGliL3BsdWdpbi10aGlydHktdHdvL2luZGV4LmpzPzc3NjciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAb3RwbGliL3BsdWdpbi10aGlydHktdHdvXG4gKlxuICogQGF1dGhvciBHZXJhbGQgWWVvIDxjb250YWN0QGZ1c2VkdGhvdWdodC5jb20+XG4gKiBAdmVyc2lvbjogMTIuMC4xXG4gKiBAbGljZW5zZTogTUlUXG4gKiovXG4ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wRGVmYXVsdCAoZXgpIHsgcmV0dXJuIChleCAmJiAodHlwZW9mIGV4ID09PSAnb2JqZWN0JykgJiYgJ2RlZmF1bHQnIGluIGV4KSA/IGV4WydkZWZhdWx0J10gOiBleDsgfVxuXG52YXIgdGhpcnR5VHdvID0gX2ludGVyb3BEZWZhdWx0KHJlcXVpcmUoJ3RoaXJ0eS10d28nKSk7XG5cbmNvbnN0IGtleURlY29kZXIgPSAoZW5jb2RlZFNlY3JldCwgZW5jb2RpbmcpID0+IHtcbiAgcmV0dXJuIHRoaXJ0eVR3by5kZWNvZGUoZW5jb2RlZFNlY3JldCkudG9TdHJpbmcoZW5jb2RpbmcpO1xufTtcbmNvbnN0IGtleUVuY29kZXIgPSAoc2VjcmV0LCBlbmNvZGluZykgPT4ge1xuICByZXR1cm4gdGhpcnR5VHdvLmVuY29kZShCdWZmZXIuZnJvbShzZWNyZXQsIGVuY29kaW5nKS50b1N0cmluZygnYXNjaWknKSkudG9TdHJpbmcoKS5yZXBsYWNlKC89L2csICcnKTtcbn07XG5cbmV4cG9ydHMua2V5RGVjb2RlciA9IGtleURlY29kZXI7XG5leHBvcnRzLmtleUVuY29kZXIgPSBrZXlFbmNvZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@otplib/plugin-thirty-two/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@otplib/preset-default/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@otplib/preset-default/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * @otplib/preset-default\n *\n * @author Gerald Yeo <contact@fusedthought.com>\n * @version: 12.0.1\n * @license: MIT\n **/\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar pluginCrypto = __webpack_require__(/*! @otplib/plugin-crypto */ \"(rsc)/./node_modules/@otplib/plugin-crypto/index.js\");\nvar pluginThirtyTwo = __webpack_require__(/*! @otplib/plugin-thirty-two */ \"(rsc)/./node_modules/@otplib/plugin-thirty-two/index.js\");\nvar core = __webpack_require__(/*! @otplib/core */ \"(rsc)/./node_modules/@otplib/core/index.js\");\n\nconst hotp = new core.HOTP({\n  createDigest: pluginCrypto.createDigest\n});\nconst totp = new core.TOTP({\n  createDigest: pluginCrypto.createDigest\n});\nconst authenticator = new core.Authenticator({\n  createDigest: pluginCrypto.createDigest,\n  createRandomBytes: pluginCrypto.createRandomBytes,\n  keyDecoder: pluginThirtyTwo.keyDecoder,\n  keyEncoder: pluginThirtyTwo.keyEncoder\n});\n\nexports.authenticator = authenticator;\nexports.hotp = hotp;\nexports.totp = totp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG90cGxpYi9wcmVzZXQtZGVmYXVsdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhOztBQUViLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQXVCO0FBQ2xELHNCQUFzQixtQkFBTyxDQUFDLDBGQUEyQjtBQUN6RCxXQUFXLG1CQUFPLENBQUMsZ0VBQWM7O0FBRWpDO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxxQkFBcUI7QUFDckIsWUFBWTtBQUNaLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmdlbGJyb2tpbmctbGl2ZS1kYXRhLXZlcmNlbC8uL25vZGVfbW9kdWxlcy9Ab3RwbGliL3ByZXNldC1kZWZhdWx0L2luZGV4LmpzP2U5M2UiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAb3RwbGliL3ByZXNldC1kZWZhdWx0XG4gKlxuICogQGF1dGhvciBHZXJhbGQgWWVvIDxjb250YWN0QGZ1c2VkdGhvdWdodC5jb20+XG4gKiBAdmVyc2lvbjogMTIuMC4xXG4gKiBAbGljZW5zZTogTUlUXG4gKiovXG4ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbnZhciBwbHVnaW5DcnlwdG8gPSByZXF1aXJlKCdAb3RwbGliL3BsdWdpbi1jcnlwdG8nKTtcbnZhciBwbHVnaW5UaGlydHlUd28gPSByZXF1aXJlKCdAb3RwbGliL3BsdWdpbi10aGlydHktdHdvJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJ0BvdHBsaWIvY29yZScpO1xuXG5jb25zdCBob3RwID0gbmV3IGNvcmUuSE9UUCh7XG4gIGNyZWF0ZURpZ2VzdDogcGx1Z2luQ3J5cHRvLmNyZWF0ZURpZ2VzdFxufSk7XG5jb25zdCB0b3RwID0gbmV3IGNvcmUuVE9UUCh7XG4gIGNyZWF0ZURpZ2VzdDogcGx1Z2luQ3J5cHRvLmNyZWF0ZURpZ2VzdFxufSk7XG5jb25zdCBhdXRoZW50aWNhdG9yID0gbmV3IGNvcmUuQXV0aGVudGljYXRvcih7XG4gIGNyZWF0ZURpZ2VzdDogcGx1Z2luQ3J5cHRvLmNyZWF0ZURpZ2VzdCxcbiAgY3JlYXRlUmFuZG9tQnl0ZXM6IHBsdWdpbkNyeXB0by5jcmVhdGVSYW5kb21CeXRlcyxcbiAga2V5RGVjb2RlcjogcGx1Z2luVGhpcnR5VHdvLmtleURlY29kZXIsXG4gIGtleUVuY29kZXI6IHBsdWdpblRoaXJ0eVR3by5rZXlFbmNvZGVyXG59KTtcblxuZXhwb3J0cy5hdXRoZW50aWNhdG9yID0gYXV0aGVudGljYXRvcjtcbmV4cG9ydHMuaG90cCA9IGhvdHA7XG5leHBvcnRzLnRvdHAgPSB0b3RwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@otplib/preset-default/index.js\n");

/***/ })

};
;